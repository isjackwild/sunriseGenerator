// Generated by CoffeeScript 1.6.2
(function() {
  var ctx, cv, horizonCols, skyCols, sunriseEngine,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    _this = this;

  cv = document.getElementById('sunriseGenerator');

  cv.width = window.innerWidth;

  cv.height = window.innerHeight;

  ctx = cv.getContext('2d');

  skyCols = ["rgb(241, 250, 255)", "rgb(9, 91, 184)", "rgb(179, 44, 44)", "rgb(69, 65, 104)", "rgb(40, 171, 197)", "rgb(128, 172, 219)", "rgb(0, 80, 146)", "rgb(47, 44, 67)", "rgb(42, 42, 97)", "rgb(131, 63, 24)", "rgb(58, 182, 196)", "rgb(39, 135, 254)"];

  horizonCols = ["rgb(242, 92, 76)", "rgb(253, 141, 24)", "rgb(252, 254, 112)", "rgb(253, 64, 103)", "rgb(252, 230, 149)", "rgb(255, 224, 55)", "rgb(251, 210, 92)", "rgb(250, 191, 70)", "rgb(179, 69, 1)", "rgb(248, 248, 164)", "rgb(255, 56, 105)", "rgb(255, 128, 22)"];

  sunriseEngine = (function() {
    sunriseEngine._borderMinThickness;

    sunriseEngine._borderFeather;

    sunriseEngine._borderMaxThickness;

    sunriseEngine._borderBlur;

    sunriseEngine._gradScale;

    sunriseEngine._streakyness;

    sunriseEngine._noiseLoops;

    sunriseEngine._skyCol;

    sunriseEngine._horizonCol;

    sunriseEngine._throttle = 5000;

    function sunriseEngine(ctx, w, h) {
      this.render = __bind(this.render, this);
      this.makeBorder = __bind(this.makeBorder, this);
      this.makeSun = __bind(this.makeSun, this);
      this.makeGradient = __bind(this.makeGradient, this);
      this.randomise = __bind(this.randomise, this);
      this.randomNumber = __bind(this.randomNumber, this);
      this.init = __bind(this.init, this);      this._ctx = ctx;
      this._w = w;
      this._h = h;
    }

    sunriseEngine.prototype.init = function() {
      this.randomise();
      return this.render();
    };

    sunriseEngine.prototype.randomNumber = function(min, max, integer) {
      if (integer == null) {
        integer = true;
      }
      if (integer === true) {
        return Math.floor(Math.random() * (min - max + 1) + min);
      } else if (integer === false) {
        return Math.random() * (min - max) + min;
      }
    };

    sunriseEngine.prototype.randomise = function() {
      console.log("randomise");
      this._borderMinThickness = this.randomNumber(5, 20);
      this._borderFeather = this.randomNumber(10, 20);
      this._borderMaxThickness = this._borderMinThickness + this._borderFeather;
      this._borderBlur = this.randomNumber(5, 12);
      this._gradScale = this.randomNumber(0, 0.5, false);
      this._streakyness = this.randomNumber(2, 8);
      this._noiseLoops = this.randomNumber(4, 10);
      this._skyCol = skyCols[Math.ceil(Math.random() * skyCols.length) - 1];
      return this._horizonCol = horizonCols[Math.ceil(Math.random() * horizonCols.length) - 1];
    };

    sunriseEngine.prototype.makeGradient = function() {
      var colourStep, i, pixel, tempImage, _i, _len, _ref;

      console.log("make grad");
      colourStep = 0;
      tempImage = this._ctx.createImageData(this._w, this._h);
      i = 0;
      _ref = tempImage.data;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        pixel = _ref[_i];
        if (i % 4 !== 3) {
          tempImage.data[i] = 10;
        } else {
          tempImage.data[i] = 255;
        }
        i++;
      }
      return this._ctx.putImageData(tempImage, 0, 0);
    };

    sunriseEngine.prototype.makeSun = function() {
      return console.log("make sun");
    };

    sunriseEngine.prototype.makeBorder = function() {
      return console.log("make border");
    };

    sunriseEngine.prototype.render = function() {
      this.makeGradient();
      this.makeBorder();
      return this.makeSun();
    };

    return sunriseEngine;

  })();

  $(window).load(function() {
    var coverArtworkEngine;

    coverArtworkEngine = new sunriseEngine(ctx, cv.width, cv.height);
    return coverArtworkEngine.init();
  });

}).call(this);
